{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","htmlFor","id","value","onChange","event","filterFunction","target","baseUrl","personService","getAll","axios","get","then","response","data","create","newPerson","post","remove","delete","update","changedPerson","put","PersonForm","onSubmit","preventDefault","person","name","number","persons","some","elem","window","confirm","findPerson","find","p","updatePerson","addPerson","map","nameSetter","numberSetter","setMessage","error","setTimeout","catch","concat","type","Persons","showPersons","filterName","filter","toLowerCase","includes","onClick","removePerson","changePersons","updatedPersonList","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilterName","notification","setNotification","errorMessage","setErrorMessage","useEffect","initialPersons","console","log","errorValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e742e73.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <form>\n          <label htmlFor={\"filterName\"}>Search: </label>\n          <input id={\"filterName\"} value={props.value} onChange={(event) => {props.filterFunction(event.target.value)}} />\n        </form>\n    )\n}\n\nexport default Filter\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n                .then((response) => response.data)\n}\n\nconst create = (newPerson) => {\n    return axios.post(baseUrl, newPerson).then(response => response.data);\n}\n\nconst update = (changedPerson) => {\n    return axios.put(`${baseUrl}/${changedPerson.id}`, changedPerson).then((response) => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`);\n}\n\nconst personService = { getAll, create, remove, update }\n\nexport default personService;\n","import React from \"react\";\n\nimport personService from '../services/persons'\n\nconst PersonForm = (props) => {\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const person = { name: props.name, number: props.number };\n\n    if (props.persons.some((elem) => elem.name === props.name)) {\n      if (window.confirm(`${props.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const findPerson = props.persons.find(p => p.name === props.name)\n        const changedPerson = {...findPerson, number: props.number }\n        personService\n          .update(changedPerson)\n          .then((updatePerson) => {\n            props.addPerson(props.persons.map(p => p.id !== updatePerson.id ? p : updatePerson));\n            props.nameSetter(\"\");\n            props.numberSetter(\"\");\n            props.setMessage(`Updated ${updatePerson.name}`)\n            props.error(false)\n            setTimeout(() => props.setMessage(''), 5000)\n          })\n          .catch((error) => {\n            props.error(true)\n            props.setMessage(error.response.data.error)\n            setTimeout(() => props.setMessage(''), 5000)\n          })\n      }\n      return;\n    }\n    personService\n      .create(person)\n      .then((newPerson) => {\n        props.addPerson(props.persons.concat(newPerson));\n        props.nameSetter(\"\");\n        props.numberSetter(\"\");\n        props.error(false)\n        props.setMessage(`Added ${newPerson.name}`)\n        setTimeout(() => props.setMessage(''), 5000)\n      })\n      .catch((error) => {\n        props.error(true)\n        props.setMessage(error.response.data.error)\n        setTimeout(() => props.setMessage(''), 5000)\n      })\n  };\n\n  return (\n    <>\n      <form onSubmit={addPerson}>\n        <div>\n          name:{\" \"}\n          <input\n            value={props.name}\n            onChange={(event) => {\n              props.nameSetter(event.target.value);\n            }}\n          />\n        </div>\n        <div>\n          number:{\" \"}\n          <input\n            value={props.number}\n            onChange={(event) => {\n              props.numberSetter(event.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react'\n\nimport personService from '../services/persons'\n\nconst Persons = (props) => {\n    const showPersons = props.filterName ? props.persons.filter((person) => person.name.toLowerCase().includes(props.filterName.toLowerCase())) : props.persons\n\n    const removePerson = (removePerson) => {\n        if (window.confirm(`Delete ${removePerson.name}`)) {\n            personService\n                .remove(removePerson.id)\n                .then(() => {\n                    props.changePersons(props.persons.filter(person => person.id !== removePerson.id))\n                    props.error(false)\n                    props.setMessage(`Removed ${removePerson.name}`)\n                    setTimeout(() => props.setMessage(''), 5000)\n                }).catch((error) => {\n                    personService\n                        .getAll()\n                        .then((updatedPersonList) => {\n                            props.changePersons(updatedPersonList)\n                        })\n                    props.error(true)\n                    props.setMessage(`Information of ${removePerson.name} has already been removed from server`)\n                    setTimeout(() => props.setMessage(''), 5000)\n                })\n\n        }\n    }\n\n    return (\n        <div>\n          {showPersons.map((person) => <p key={person.name}>{person.name} {person.number} <button key={person.name} onClick={() => removePerson(person)}>delete</button></p>)}\n        </div>\n    )\n}\n\nexport default Persons\n","import React from 'react'\nimport './notification.css'\n\nconst Notification = ({error, message} ) => {\n    if (message === \"\") {\n        return null;\n    }\n    return (<div className={error ? \"error\" : \"message\"}>{message}</div>)\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ notification, setNotification ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(false)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((initialPersons) => {\n        setPersons(initialPersons)\n      })\n      .catch((error) => console.log(error))\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification error={errorMessage} message={notification}/>\n      <Filter value={filterName} filterFunction={setFilterName} />\n      <h3>Add a new</h3>\n      <PersonForm\n         persons={persons} addPerson={setPersons}\n         name={newName} nameSetter={setNewName}\n         number={newNumber} numberSetter={setNewNumber}\n         message={notification} setMessage={setNotification}\n         errorValue={errorMessage} error={setErrorMessage}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} changePersons={setPersons} filterName={filterName}\n               message={notification} setMessage={setNotification}\n               errorValue={errorMessage} error={setErrorMessage}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}